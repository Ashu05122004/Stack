class Solution {
public:

    string removeString(string &s , string &match_str){

        stack<char> st;

        for(char &ch : s){
            if(!st.empty() && ch == match_str[1] && st.top() == match_str[0]){
                st.pop();
            }
            else{
                st.push(ch);
            }
        }

        string temp = "";
        while(!st.empty()){
            temp += st.top();
            st.pop();
        }
        
        reverse(begin(temp) , end(temp));
        return temp;

    }

    int maximumGain(string s, int x, int y) {
            
        int n = s.length();
        int total_score = 0 ;

        string max_str = (x>y) ? "ab" : "ba";
        string min_str = (x<y) ? "ab" : "ba";

        // First Pass
        string first_str = removeString(s , max_str);
        int L = first_str.length();
        int diff1 = n - L;
        total_score += (diff1 / 2) * max(x , y);

        // Second Pass 
        string second_str = removeString(first_str , min_str);
        int M = second_str.length();
        int diff2 = L - M;
        total_score += (diff2 / 2) * min(x , y);

        return total_score;

    }   
};
